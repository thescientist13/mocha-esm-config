diff --git a/node_modules/mocha/lib/cli/config.js b/node_modules/mocha/lib/cli/config.js
index 9f9dfdb..5f657d1 100644
--- a/node_modules/mocha/lib/cli/config.js
+++ b/node_modules/mocha/lib/cli/config.js
@@ -24,6 +24,7 @@ const utils = require('../utils');
 exports.CONFIG_FILES = [
   '.mocharc.cjs',
   '.mocharc.js',
+  '.mocharc.mjs',
   '.mocharc.yaml',
   '.mocharc.yml',
   '.mocharc.jsonc',
@@ -43,6 +44,7 @@ const parsers = (exports.parsers = {
       cwdFilepath = require.resolve(path.resolve(filepath)); // evtl. throws
       return require(cwdFilepath);
     } catch (err) {
+      console.log({ err });
       if (cwdFilepath) throw err;
 
       debug('parsers: retry load as module-relative path: "%s"', filepath);
@@ -64,6 +66,7 @@ const parsers = (exports.parsers = {
  * @returns {Object} Parsed config object
  */
 exports.loadConfig = filepath => {
+  const packageJson = require(path.resolve(utils.cwd(), 'package.json'));
   let config = {};
   debug('loadConfig: trying to parse config at %s', filepath);
   
@@ -71,7 +74,11 @@ exports.loadConfig = filepath => {
   try {
     if (ext === '.yml' || ext === '.yaml') {
       config = parsers.yaml(filepath);
+    } else if ((ext === '.js' && packageJson.type === "module") || ext === '.mjs') {
+      console.log({ filepath });
+      config = parsers.js(filepath).default;
     } else if (ext === '.js' || ext === '.cjs') {
+      console.log({ filepath });
       config = parsers.js(filepath);
     } else {
       config = parsers.json(filepath);
@@ -82,6 +89,8 @@ exports.loadConfig = filepath => {
       filepath
     );
   }
+
+  console.log({ config });
   return config;
 };
 
